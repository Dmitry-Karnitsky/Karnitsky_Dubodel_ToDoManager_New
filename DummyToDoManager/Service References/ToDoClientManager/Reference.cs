//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DummyToDoManager.ToDoClientManager {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDoProxyItem", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class ToDoProxyItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToDoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompleted {
            get {
                return this.IsCompletedField;
            }
            set {
                if ((this.IsCompletedField.Equals(value) != true)) {
                    this.IsCompletedField = value;
                    this.RaisePropertyChanged("IsCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToDoId {
            get {
                return this.ToDoIdField;
            }
            set {
                if ((this.ToDoIdField.Equals(value) != true)) {
                    this.ToDoIdField = value;
                    this.RaisePropertyChanged("ToDoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ToDoClientManager.IToDoProxyService")]
    public interface IToDoProxyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/CreateToDoItem", ReplyAction="http://tempuri.org/IToDoProxyService/CreateToDoItemResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DummyToDoManager.ToDoClientManager.ToDoProxyItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DummyToDoManager.ToDoClientManager.ToDoProxyItem))]
        void CreateToDoItem(object todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/CreateToDoItem", ReplyAction="http://tempuri.org/IToDoProxyService/CreateToDoItemResponse")]
        System.Threading.Tasks.Task CreateToDoItemAsync(object todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/CreateUser", ReplyAction="http://tempuri.org/IToDoProxyService/CreateUserResponse")]
        int CreateUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/CreateUser", ReplyAction="http://tempuri.org/IToDoProxyService/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/DeleteToDoItem", ReplyAction="http://tempuri.org/IToDoProxyService/DeleteToDoItemResponse")]
        void DeleteToDoItem(int todoItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/DeleteToDoItem", ReplyAction="http://tempuri.org/IToDoProxyService/DeleteToDoItemResponse")]
        System.Threading.Tasks.Task DeleteToDoItemAsync(int todoItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/GetTodoList", ReplyAction="http://tempuri.org/IToDoProxyService/GetTodoListResponse")]
        DummyToDoManager.ToDoClientManager.ToDoProxyItem[] GetTodoList(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/GetTodoList", ReplyAction="http://tempuri.org/IToDoProxyService/GetTodoListResponse")]
        System.Threading.Tasks.Task<DummyToDoManager.ToDoClientManager.ToDoProxyItem[]> GetTodoListAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/UpdateToDoItem", ReplyAction="http://tempuri.org/IToDoProxyService/UpdateToDoItemResponse")]
        void UpdateToDoItem(DummyToDoManager.ToDoClientManager.ToDoProxyItem todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoProxyService/UpdateToDoItem", ReplyAction="http://tempuri.org/IToDoProxyService/UpdateToDoItemResponse")]
        System.Threading.Tasks.Task UpdateToDoItemAsync(DummyToDoManager.ToDoClientManager.ToDoProxyItem todo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IToDoProxyServiceChannel : DummyToDoManager.ToDoClientManager.IToDoProxyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ToDoProxyServiceClient : System.ServiceModel.ClientBase<DummyToDoManager.ToDoClientManager.IToDoProxyService>, DummyToDoManager.ToDoClientManager.IToDoProxyService {
        
        public ToDoProxyServiceClient() {
        }
        
        public ToDoProxyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ToDoProxyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoProxyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoProxyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateToDoItem(object todo) {
            base.Channel.CreateToDoItem(todo);
        }
        
        public System.Threading.Tasks.Task CreateToDoItemAsync(object todo) {
            return base.Channel.CreateToDoItemAsync(todo);
        }
        
        public int CreateUser(string name) {
            return base.Channel.CreateUser(name);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(string name) {
            return base.Channel.CreateUserAsync(name);
        }
        
        public void DeleteToDoItem(int todoItemId) {
            base.Channel.DeleteToDoItem(todoItemId);
        }
        
        public System.Threading.Tasks.Task DeleteToDoItemAsync(int todoItemId) {
            return base.Channel.DeleteToDoItemAsync(todoItemId);
        }
        
        public DummyToDoManager.ToDoClientManager.ToDoProxyItem[] GetTodoList(int userId) {
            return base.Channel.GetTodoList(userId);
        }
        
        public System.Threading.Tasks.Task<DummyToDoManager.ToDoClientManager.ToDoProxyItem[]> GetTodoListAsync(int userId) {
            return base.Channel.GetTodoListAsync(userId);
        }
        
        public void UpdateToDoItem(DummyToDoManager.ToDoClientManager.ToDoProxyItem todo) {
            base.Channel.UpdateToDoItem(todo);
        }
        
        public System.Threading.Tasks.Task UpdateToDoItemAsync(DummyToDoManager.ToDoClientManager.ToDoProxyItem todo) {
            return base.Channel.UpdateToDoItemAsync(todo);
        }
    }
}
